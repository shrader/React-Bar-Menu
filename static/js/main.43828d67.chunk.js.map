{"version":3,"sources":["Home.js","Api.js","NavBar.js","Menu.js","FoodOrDrinkItem.js","404.js","NewItemForm.js","App.js","serviceWorker.js","index.js"],"names":["Home","numDrinks","numSnacks","className","BASE_API_URL","process","REACT_APP_BASE_URL","SnackOrBoozeApi","axios","get","result","data","post","NavBar","expand","exact","to","navbar","Menu","items","type","map","item","id","key","name","FoodOrDrinkItem","cantFind","useParams","find","description","recipe","serve","page404","NewItemForm","drinks","snacks","addItem","History","useHistory","useState","error","setError","itemData","setItemData","handleChange","e","target","value","class","role","txt","htmlFor","selected","onChange","placeholder","aria-label","aria-describedby","onClick","preventDefault","document","getElementById","tempId","toLowerCase","replace","Object","values","every","inputVal","snack","drink","push","App","isLoading","setIsLoading","setSnacks","setDrinks","getSnacks","a","getDrinks","console","log","addSnack","addDrink","res","alert","useEffect","path","length","title","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43828d67.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\n\nfunction Home({numDrinks, numSnacks}) {\n  return (\n    <section className=\"col-md-8\">\n      <Card>\n        <CardBody className=\"text-center\">\n          <CardTitle>\n            <h3 className=\"font-weight-bold\">\n              Welcome to Silicon Valley's premier dive cafe!\n            </h3>\n            <p className=\"test\">We have {numSnacks} snacks, and {numDrinks} drinks available</p>\n          </CardTitle>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default Home;\n","import axios from \"axios\";\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL || \"https://shrader.github.io/React-Bar-Menu/\";\n\n/* \n  json-server will give you CRUD endpoints on snacks and drinks.\n  Here we've provided you with a single action to get all drinks.\n\n  You'll need to add to this class as you build features for the app.\n*/\n\nclass SnackOrBoozeApi {\n\n  static async getSnacks() {\n    const result = await axios.get(`${BASE_API_URL}/snacks`);\n    return result.data;\n  }\n\n  static async addSnack(data) {\n    const result = await axios.post(`${BASE_API_URL}/snacks`, data);\n    return result.data;\n  }\n\n  static async getDrinks() {\n    const result = await axios.get(`${BASE_API_URL}/drinks`);\n    return result.data;\n  }\n\n  static async addDrink(data) {\n    const result = await axios.post(`${BASE_API_URL}/drinks`, data);\n    return result.data;\n  }\n\n}\n\nexport default SnackOrBoozeApi;\n","import React from \"react\";\nimport \"./NavBar.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\n\nfunction NavBar() {\n  return (\n    <div>\n      <Navbar expand=\"md\">\n        <NavLink exact to=\"/\" className=\"navbar-brand\">\n          Snack or Booze\n        </NavLink>\n\n        <Nav className=\"ml-auto\" navbar>\n        <NavItem>\n            <NavLink to=\"/drinks\">Drinks</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to=\"/snacks\">Snacks</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Menu.css\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  ListGroup,\n  ListGroupItem\n} from \"reactstrap\";\n\n//menu for drinks or snacks that shows list of available items in that category\n//if a link item is clicked it goes to the detail page for that item\nfunction Menu({ items, type }) {\n  //render menu for items, loops over items and cretes a link for each one\n  //changes depending on if items passed is snacks or drinks\n  return (\n    <section className=\"col-md-4\">\n      <Card>\n        <CardBody>\n          <CardTitle className=\"font-weight-bold text-center\">\n            {type === \"snacks\"? \"Snack Menu\" : \"Drink Menu\"}\n          </CardTitle>\n          <CardText>\n            Please check out our fine selection of {type === \"snacks\"? \"snack\" : \"drink\"} items.\n          </CardText>\n          <ListGroup>\n            {items.map(item => (\n              type === \"snacks\"?\n              //if type is snacks render snack links\n              <Link to={`/snacks/${item.id}`} key={item.id}>\n                <ListGroupItem>{item.name}</ListGroupItem>\n              </Link>:\n              //else render drink links\n              <Link to={`/drinks/${item.id}`} key={item.id}>\n              <ListGroupItem>{item.name}</ListGroupItem>\n            </Link>\n            ))}\n            <Link to=\"/new-item\">\n            <ListGroupItem>Add New {type === \"snacks\"? \"Snack\" : \"Drink\"} Item!</ListGroupItem>\n              </Link>\n          </ListGroup>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\n\n//renders item details\nfunction FoodOrDrinkItem({ items, cantFind}) {\n  const { id } = useParams();\n\n    //find item in array based on id form query params\n    let item = items.find(item => item.id === id);\n\n    if (!item) return <Redirect to={cantFind} />;\n\n  return (\n    <section>\n      <Card>\n        <CardBody>\n          <CardTitle className=\"font-weight-bold text-center\">\n            {item.name}\n          </CardTitle>\n          <CardText className=\"font-italic\">{item.description}</CardText>\n          <p>\n            <b>Recipe:</b> {item.recipe}\n          </p>\n          <p>\n            <b>Serve:</b> {item.serve}\n          </p>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default FoodOrDrinkItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\n\n//404 page for resources that can't be found\nfunction page404() {\n\n  return (\n    <section className=\"col-md-8\">\n    <Card>\n      <CardBody className=\"text-center\">\n        <CardTitle>\n          <h1>404!</h1>\n        <h2>Sorry. I can't seem to find what you want.</h2>\n        <Link to=\"/\">Go back Home</Link>\n        </CardTitle>\n      </CardBody>\n    </Card>\n  </section>\n  )\n}\n\nexport default page404;","import React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\n\n\nfunction NewItemForm({drinks, snacks, addItem}) {\n  \n  const History = useHistory();\n  const[error, setError] = useState();\n\n  const [itemData, setItemData] = useState({\n    id:\"\",\n    name: \"\",\n    description: \"\",\n    recipe: \"\",\n    serve: \"\"\n  });\n\n  //update input state as user writes in form\n  function handleChange(e) {\n    const {name, value} = e.target;\n    setItemData(itemData => ({ ...itemData, [name]: value }));\n  }\n\n  //use function for adding new item -------------------still to-do\n  function handleSubmit(e) {\n\n    //make id from name\n    //validate input by checking that all fields are not \"\"\n    //also check that id / name are not already in the system\n    e.preventDefault()\n    let type = document.getElementById(\"inputGroupSelect01\").value;\n    let tempId = (itemData.name).toLowerCase().replace(/\\s/g , \"-\");\n    let data = {...itemData, id:tempId}\n\n    //make sure something has been entered into every input if not add error\n    if (Object.values(data).every(inputVal => inputVal !== \"\")) {\n      \n      //make sure this id isn't already in the psuedo DB if it is add appropriate error\n      if (snacks.every(snack => snack.id !== tempId) && drinks.every(drink => drink.id !== tempId)) {\n        \n      //add item and redirect to home page\n      addItem(data, type);\n      History.push(\"/\");\n\n      } else {\n        setError({txt: \"This item is already on the menu, check again or re-name the item\"});\n      }\n\n    } else {\n      setError({txt: \"Please make sure every field is filled out\"});\n    }\n  }\n\n\n  return(\n    <section className=\"col-md-8\">\n    <Card>\n      <CardBody className=\"text-center\">\n        <CardTitle>\n          <h2>New Item</h2>\n        </CardTitle>\n        {error? <div class=\"alert alert-danger\" role=\"alert\">{error.txt}</div> : null}\n        <form id=\"newItemForm\">\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Item type</label>\n              </div>\n            <select  class=\"custom-select\" id=\"inputGroupSelect01\">\n              <option selected>Choose...</option>\n              <option value=\"food\">Food</option>\n              <option value=\"drink\">Drink</option>\n            </select>\n          </div>\n          <p></p>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">Item Name</span>\n            </div>\n              <input name=\"name\" value={itemData.name} onChange={handleChange} type=\"text\" class=\"form-control\" placeholder=\"Rum & Coke\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n              </input>\n            </div>\n          <p></p>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">Description</span>\n            </div>\n              <input name=\"description\" value={itemData.description} onChange={handleChange} type=\"text\" class=\"form-control\" placeholder=\"Something to drink\" aria-label=\"Description\" aria-describedby=\"basic-addon1\">\n              </input>\n            </div>\n          <p></p>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">Recipe</span>\n            </div>\n              <input name=\"recipe\" value={itemData.recipe} onChange={handleChange} type=\"text\" class=\"form-control\" placeholder=\"Some Rum and some Coke\" aria-label=\"Description\" aria-describedby=\"basic-addon1\">\n              </input>\n            </div>\n          <p></p>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">Serve</span>\n            </div>\n              <input name=\"serve\" value={itemData.serve} onChange={handleChange} type=\"text\" class=\"form-control\" placeholder=\"cold and fizzy\" aria-label=\"Description\" aria-describedby=\"basic-addon1\">\n              </input>\n            </div>\n          <p></p>\n          <button type=\"button\" onClick={handleSubmit} class=\"btn btn-lg btn-block btn-outline-primary\">Add Item!</button>\n        </form>\n      </CardBody>\n    </Card>\n  </section>\n  )\n}\n\nexport default NewItemForm;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport SnackOrBoozeApi from \"./Api\";\nimport NavBar from \"./NavBar\";\nimport { Route, Switch} from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport Snack from \"./FoodOrDrinkItem\";\nimport Drink from \"./FoodOrDrinkItem\";\nimport Page404 from \"./404\";\nimport NewItemForm from \"./NewItemForm\";\n\n//app gets snack and drink items and passes them as props and does the routing for the app\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [snacks, setSnacks] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n\n  //get snacks from psuedoDB\n  async function getSnacks() {\n    let snacks = await SnackOrBoozeApi.getSnacks();\n    setSnacks(snacks);\n    setIsLoading(false);\n  }\n\n  //get drinks from psuedoDB\n  async function getDrinks() {\n    let drinks = await SnackOrBoozeApi.getDrinks();\n    setDrinks(drinks);\n    setIsLoading(false);\n  }\n\n  //when NewItemForm is submitted add new item to psuedoDB (passed as prop in route)\n  async function addItem(data, type) {\n    console.log(\"data\", data);\n    //is the type being added food or drink?\n    let res = type===\"food\" ? \n      await SnackOrBoozeApi.addSnack(data):\n      await SnackOrBoozeApi.addDrink(data);\n    \n      if (!res.error) {\n        alert(\"Item added successfully\");\n      } else {\n        alert(\"Item could not be added.\", res.error)\n      }\n\n      getSnacks();\n      getDrinks();\n  }\n\n  //on initial page load get snacks and drinks\n  useEffect(() => {\n    getSnacks();\n    getDrinks();\n  }, []);\n\n  if (isLoading) {\n    return <p>Loading &hellip;</p>;\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar />\n        <main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home numDrinks={drinks.length} numSnacks={snacks.length} />\n            </Route>\n            <Route exact path=\"/snacks\">\n              <Menu items={snacks} type=\"snacks\" title=\"Snacks\" />\n            </Route>\n            <Route path=\"/snacks/:id\">\n              <Snack items={snacks}  cantFind=\"/snacks\" />\n            </Route>\n            <Route exact path=\"/drinks\">\n              <Menu items={drinks} type=\"drinks\" title=\"Drinks\" />\n            </Route>\n            <Route path=\"/drinks/:id\">\n              <Drink items={drinks} cantFind=\"/drinks\" />\n            </Route>\n            <Route exact path=\"/new-item\">\n              <NewItemForm drinks={drinks} snacks={snacks} addItem={addItem}/>\n            </Route>\n            <Route>\n              <Page404 />\n            </Route>\n          </Switch>\n        </main>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}